/* Auto-generated by genmsg_cpp for file /home/calderpg/Dropbox/DARPA_Research_Work/drc/hubo_ros_msgs/msg/HuboFT.msg */
#ifndef HUBO_ROS_MSGS_MESSAGE_HUBOFT_H
#define HUBO_ROS_MSGS_MESSAGE_HUBOFT_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"


namespace hubo_ros_msgs
{
template <class ContainerAllocator>
struct HuboFT_ {
  typedef HuboFT_<ContainerAllocator> Type;

  HuboFT_()
  : Mx(0.0)
  , My(0.0)
  , Fz(0.0)
  {
  }

  HuboFT_(const ContainerAllocator& _alloc)
  : Mx(0.0)
  , My(0.0)
  , Fz(0.0)
  {
  }

  typedef double _Mx_type;
  double Mx;

  typedef double _My_type;
  double My;

  typedef double _Fz_type;
  double Fz;


  typedef boost::shared_ptr< ::hubo_ros_msgs::HuboFT_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::hubo_ros_msgs::HuboFT_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct HuboFT
typedef  ::hubo_ros_msgs::HuboFT_<std::allocator<void> > HuboFT;

typedef boost::shared_ptr< ::hubo_ros_msgs::HuboFT> HuboFTPtr;
typedef boost::shared_ptr< ::hubo_ros_msgs::HuboFT const> HuboFTConstPtr;


template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const  ::hubo_ros_msgs::HuboFT_<ContainerAllocator> & v)
{
  ros::message_operations::Printer< ::hubo_ros_msgs::HuboFT_<ContainerAllocator> >::stream(s, "", v);
  return s;}

} // namespace hubo_ros_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::hubo_ros_msgs::HuboFT_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::hubo_ros_msgs::HuboFT_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::hubo_ros_msgs::HuboFT_<ContainerAllocator> > {
  static const char* value() 
  {
    return "39b60252e0e6e720a6ad5e938dd7e24d";
  }

  static const char* value(const  ::hubo_ros_msgs::HuboFT_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x39b60252e0e6e720ULL;
  static const uint64_t static_value2 = 0xa6ad5e938dd7e24dULL;
};

template<class ContainerAllocator>
struct DataType< ::hubo_ros_msgs::HuboFT_<ContainerAllocator> > {
  static const char* value() 
  {
    return "hubo_ros_msgs/HuboFT";
  }

  static const char* value(const  ::hubo_ros_msgs::HuboFT_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::hubo_ros_msgs::HuboFT_<ContainerAllocator> > {
  static const char* value() 
  {
    return "float64 Mx\n\
float64 My\n\
float64 Fz\n\
\n\
";
  }

  static const char* value(const  ::hubo_ros_msgs::HuboFT_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::hubo_ros_msgs::HuboFT_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::hubo_ros_msgs::HuboFT_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.Mx);
    stream.next(m.My);
    stream.next(m.Fz);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct HuboFT_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::hubo_ros_msgs::HuboFT_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const  ::hubo_ros_msgs::HuboFT_<ContainerAllocator> & v) 
  {
    s << indent << "Mx: ";
    Printer<double>::stream(s, indent + "  ", v.Mx);
    s << indent << "My: ";
    Printer<double>::stream(s, indent + "  ", v.My);
    s << indent << "Fz: ";
    Printer<double>::stream(s, indent + "  ", v.Fz);
  }
};


} // namespace message_operations
} // namespace ros

#endif // HUBO_ROS_MSGS_MESSAGE_HUBOFT_H

